Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> EXPRESSION
Rule 2     EXPRESSION -> NUMBER
Rule 3     EXPRESSION -> VAR
Rule 4     EXPRESSION -> EXPRESSION + EXPRESSION
Rule 5     EXPRESSION -> EXPRESSION - EXPRESSION
Rule 6     EXPRESSION -> EXPRESSION * EXPRESSION
Rule 7     EXPRESSION -> EXPRESSION / EXPRESSION
Rule 8     EXPRESSION -> EXPRESSION MUL EXPRESSION
Rule 9     EXPRESSION -> EXPRESSION DOTDIV EXPRESSION
Rule 10    EXPRESSION -> ( EXPRESSION ]

Terminals, with rules where they appear

(                    : 10
*                    : 6
+                    : 4
-                    : 5
/                    : 7
DOTDIV               : 9
MUL                  : 8
NUMBER               : 2
VAR                  : 3
]                    : 10
error                : 

Nonterminals, with rules where they appear

EXPRESSION           : 1 4 4 5 5 6 6 7 7 8 8 9 9 10
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    start                          shift and go to state 1
    EXPRESSION                     shift and go to state 2

state 1

    (0) S' -> start .



state 2

    (1) start -> EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    $end            reduce using rule 1 (start -> EXPRESSION .)
    +               shift and go to state 6
    -               shift and go to state 7
    *               shift and go to state 8
    /               shift and go to state 9
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11


state 3

    (2) EXPRESSION -> NUMBER .

    +               reduce using rule 2 (EXPRESSION -> NUMBER .)
    -               reduce using rule 2 (EXPRESSION -> NUMBER .)
    *               reduce using rule 2 (EXPRESSION -> NUMBER .)
    /               reduce using rule 2 (EXPRESSION -> NUMBER .)
    MUL             reduce using rule 2 (EXPRESSION -> NUMBER .)
    DOTDIV          reduce using rule 2 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 2 (EXPRESSION -> NUMBER .)
    ]               reduce using rule 2 (EXPRESSION -> NUMBER .)


state 4

    (3) EXPRESSION -> VAR .

    +               reduce using rule 3 (EXPRESSION -> VAR .)
    -               reduce using rule 3 (EXPRESSION -> VAR .)
    *               reduce using rule 3 (EXPRESSION -> VAR .)
    /               reduce using rule 3 (EXPRESSION -> VAR .)
    MUL             reduce using rule 3 (EXPRESSION -> VAR .)
    DOTDIV          reduce using rule 3 (EXPRESSION -> VAR .)
    $end            reduce using rule 3 (EXPRESSION -> VAR .)
    ]               reduce using rule 3 (EXPRESSION -> VAR .)


state 5

    (10) EXPRESSION -> ( . EXPRESSION ]
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 12

state 6

    (4) EXPRESSION -> EXPRESSION + . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 13

state 7

    (5) EXPRESSION -> EXPRESSION - . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 14

state 8

    (6) EXPRESSION -> EXPRESSION * . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 15

state 9

    (7) EXPRESSION -> EXPRESSION / . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 16

state 10

    (8) EXPRESSION -> EXPRESSION MUL . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 17

state 11

    (9) EXPRESSION -> EXPRESSION DOTDIV . EXPRESSION
    (2) EXPRESSION -> . NUMBER
    (3) EXPRESSION -> . VAR
    (4) EXPRESSION -> . EXPRESSION + EXPRESSION
    (5) EXPRESSION -> . EXPRESSION - EXPRESSION
    (6) EXPRESSION -> . EXPRESSION * EXPRESSION
    (7) EXPRESSION -> . EXPRESSION / EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MUL EXPRESSION
    (9) EXPRESSION -> . EXPRESSION DOTDIV EXPRESSION
    (10) EXPRESSION -> . ( EXPRESSION ]

    NUMBER          shift and go to state 3
    VAR             shift and go to state 4
    (               shift and go to state 5

    EXPRESSION                     shift and go to state 18

state 12

    (10) EXPRESSION -> ( EXPRESSION . ]
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    ]               shift and go to state 19
    +               shift and go to state 6
    -               shift and go to state 7
    *               shift and go to state 8
    /               shift and go to state 9
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11


state 13

    (4) EXPRESSION -> EXPRESSION + EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    -               reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    $end            reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    ]               reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .)
    *               shift and go to state 8
    /               shift and go to state 9
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11

  ! *               [ reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! /               [ reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! MUL             [ reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 4 (EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]


state 14

    (5) EXPRESSION -> EXPRESSION - EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    -               reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    $end            reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    ]               reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .)
    *               shift and go to state 8
    /               shift and go to state 9
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11

  ! *               [ reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! /               [ reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! MUL             [ reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 5 (EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]


state 15

    (6) EXPRESSION -> EXPRESSION * EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    -               reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    *               reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    /               reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    $end            reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    ]               reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .)
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11

  ! MUL             [ reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 6 (EXPRESSION -> EXPRESSION * EXPRESSION .) ]
  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]
  ! *               [ shift and go to state 8 ]
  ! /               [ shift and go to state 9 ]


state 16

    (7) EXPRESSION -> EXPRESSION / EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    -               reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    *               reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    /               reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    $end            reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    ]               reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .)
    MUL             shift and go to state 10
    DOTDIV          shift and go to state 11

  ! MUL             [ reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .) ]
  ! DOTDIV          [ reduce using rule 7 (EXPRESSION -> EXPRESSION / EXPRESSION .) ]
  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]
  ! *               [ shift and go to state 8 ]
  ! /               [ shift and go to state 9 ]


state 17

    (8) EXPRESSION -> EXPRESSION MUL EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    -               reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    *               reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    /               reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    MUL             reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    $end            reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    ]               reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .)
    DOTDIV          shift and go to state 11

  ! DOTDIV          [ reduce using rule 8 (EXPRESSION -> EXPRESSION MUL EXPRESSION .) ]
  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]
  ! *               [ shift and go to state 8 ]
  ! /               [ shift and go to state 9 ]
  ! MUL             [ shift and go to state 10 ]


state 18

    (9) EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .
    (4) EXPRESSION -> EXPRESSION . + EXPRESSION
    (5) EXPRESSION -> EXPRESSION . - EXPRESSION
    (6) EXPRESSION -> EXPRESSION . * EXPRESSION
    (7) EXPRESSION -> EXPRESSION . / EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MUL EXPRESSION
    (9) EXPRESSION -> EXPRESSION . DOTDIV EXPRESSION

    +               reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    -               reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    *               reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    /               reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    MUL             reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    DOTDIV          reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    $end            reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)
    ]               reduce using rule 9 (EXPRESSION -> EXPRESSION DOTDIV EXPRESSION .)

  ! +               [ shift and go to state 6 ]
  ! -               [ shift and go to state 7 ]
  ! *               [ shift and go to state 8 ]
  ! /               [ shift and go to state 9 ]
  ! MUL             [ shift and go to state 10 ]
  ! DOTDIV          [ shift and go to state 11 ]


state 19

    (10) EXPRESSION -> ( EXPRESSION ] .

    +               reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    -               reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    *               reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    /               reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    MUL             reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    DOTDIV          reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    $end            reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)
    ]               reduce using rule 10 (EXPRESSION -> ( EXPRESSION ] .)

