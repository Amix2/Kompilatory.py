tokens = 
  FOR, IF, ELSE, WHILE, BREAK, CONTINUE, RETURN, PRINT
literals = "	(){}:,;	"

===================================================================================================
VALUE =>> INTNUM | FLOATNUM | ID | STRING |  VALUE | MATRIX | ID '
  LIST_VALUE -> VALUE | VALUE , LIST_VALUE | VALUE , VALUE
MATRIX =>> [ MATRIX_ROW_LIST ] | MATRIX_ROW | MATRIX '
  MATRIX_ROW_LIST -> MATRIX_ROW , MATRIX_ROW_LIST | MATRIX_ROW , MATRIX_ROW
	MATRIX_ROW -> [ LIST_VALUE ] // delete
  {
      [1]
      [1,2,3]
      [[1,2,3]] -> ZŁE
      [[1,2], [3,4]]
      [[1,2,3], [4,5,6], [7,8,9]] 
  }

ARITHMETIC_OP 		==> + | - | * | / | DOTADD | DOTSUB | DOTMUL | DOTDIV
RELATION_OP 			==> LT | GT | LE | GE | NE | EQ 
ASSIGN_OP   ==> ADDASSIGN | SUBASSIGN | MULASSIGN | DIVASSIGN

ARTHMETIC_EXP ==> VALUE | ARITHMETIC_OP_UNAR ARTHMETIC_EXP | ARTHMETIC_EXP ARITHMETIC_OP ARTHMETIC_EXP | ( ARTHMETIC_EXP ) 
              | EYE ( ARTHMETIC_EXP ) | ZEROS ( ARTHMETIC_EXP ) | ONES ( ARTHMETIC_EXP )
      ARITHMETIC_OP_UNAR ->  + | - | ARITHMETIC_OP_UNAR ARITHMETIC_OP_UNAR
      {
        5
        +-+-+-+5
        --++(-2+-+3)
        (-+2-+(--6+6))     
      }

RELATION_EXP  ==> ARTHMETIC_EXP RELATION_OP ARTHMETIC_EXP | ( RELATION_EXP )

=====================================================================

START ==> { START } | START START | {eps} 
      | ASSIGN_EXP ; | IF_INSTR | WHILE_INSTR | FOR_INSTR | PRINT_FUN | RETURN_FUN;

IF_INSTR  =>> IF ( RELATION_EXP  ) START | IF ( RELATION_EXP  ) START ELSE START
WHILE_INSTR =>> WHILE ( RELATION_EXP  ) START
FOR_INSTR =>> FOR ID = ARTHMETIC_EXP : ARTHMETIC_EXP START
PRINT_FUN =>> PRINT LIST_VALUE ;
RETURN_FUN  =>> RETURN LIST_VALUES


ASSIGN_EXP  ==> ID ASSIGN_OP ARTHMETIC_EXP | ID [ LIST_VALUE ] ASSIGN_OP ARTHMETIC_EXP

LIST:
tokens: DOTADD, DOTSUB, DOTMUL, DOTDIV, ADDASSIGN, SUBASSIGN, MULASSIGN, DIVASSIGN, 
  LT, GT, LE, GE, NE, EQ, 
  ID, 
  INTNUM, FLOATNUM, STRING, 
  COMMENT, 
  FOR, IF, ELSE, WHILE, BREAK, CONTINUE, RETURN, EYE, ZEROS, ONES, PRINT
  + - * / ( ) [ ] { } : ' , ;
VALUE
LIST_VALUE
MATRIX
MATRIX_ROW_LIST
MATRIX_ROW
ARITHMETIC_OP
RELATION_OP
ASSIGN_OP
ARTHMETIC_EXP
ARITHMETIC_OP_UNAR
RELATION_EXP
ASSIGN_EXP
IF_INSTR
WHILE_INSTR
PRINT_FUN
START

# Niżej -> ważniejsze
tokens:
  ID, 
  INTNUM, FLOATNUM, STRING, 
  COMMENT, 
  BREAK, CONTINUE, RETURN, EYE, ZEROS, ONES, PRINT
precedence = (
  ("left", "+", "-", "DOTADD", "DOTSUB"),
  ("left", "*", r"/", "DOTMUL", "DOTDIV"),
  ("nonassoc", "LT", "GT", "LE", "GE", "NE", EQ"),
  ("nonassoc", "ADDASSIGN", "SUBASSIGN", "MULASSIGN", "DIVASSIGN"),
  ("nonassoc", r"'"),
  ("nonassoc", ":", ","),
  ("nonassoc", "(", ")", "[", "]"),
  ("nonassoc", "{", "}"),
  ("right", ";"),
  ("nonassoc", "IF", "ELSE", "FOR", "WHILE"),
)
priorytety {
  VALUE
  LIST_VALUE

  MATRIX
  MATRIX_ROW_LIST
  MATRIX_ROW

  ARITHMETIC_OP,
  RELATION_OP
  ASSIGN_OP

  ARTHMETIC_EXP
  ARITHMETIC_OP_UNAR
  RELATION_EXP
  ASSIGN_EXP

  PRINT_FUN
  IF_INSTR
  WHILE_INSTR

  START
}