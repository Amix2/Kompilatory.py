
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFleftELSEnonassocGTLTLEGENEEQnonassocADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleft*/DOTMULDOTDIVleft+-DOTADDDOTSUBleftexprrightuminusleft\'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSSTART : START INSTRUCTION\n             | INSTRUCTIONINSTRUCTION : \'{\' START \'}\'\n                   | ASSIGN_EXP \';\'\n                   | IF_INSTRUCTION\n                   | WHILE_INSTRUCTION\n                   | FOR_INSTRUCTION\n                   | PRINT_FUN\n                   | RETURN_FUN\n                   | BREAK \';\'\n                   | CONTINUE \';\' empty : VECTOR_LIST : VECTOR_LIST \',\' \'[\' LIST_VALUE \']\' %prec expr\n                   | \'[\' LIST_VALUE \']\' \',\' \'[\' LIST_VALUE \']\' MATRIX : \'[\' LIST_VALUE \']\'\n              | \'[\' VECTOR_LIST \']\' VALUE : INTNUM\n             | FLOATNUM\n             | ID "\'"\n             | ID\n             | STRING\n             | EYE \'(\' ARITHMETIC_EXP \')\'\n             | ZEROS \'(\' ARITHMETIC_EXP \')\'\n             | ONES \'(\' ARITHMETIC_EXP \')\'\n             | MATRIX\n             | MATRIX "\'" LIST_VALUE : VALUE\n                  | VALUE \',\' LIST_VALUEARITHMETIC_OP : \'+\'\n                     | \'-\'\n                     | \'*\'\n                     | \'/\'\n                     | DOTADD\n                     | DOTSUB\n                     | DOTMUL\n                     | DOTDIV ASSIGN_OP : ADDASSIGN\n                 | SUBASSIGN\n                 | MULASSIGN\n                 | DIVASSIGN\n                 | \'=\' RELATION_OP : GT\n                   | LT\n                   | LE\n                   | GE\n                   | NE\n                   | EQ ARITHMETIC_EXP : ARITHMETIC_EXP ARITHMETIC_OP ARITHMETIC_EXP %prec expr\n                     | \'(\' ARITHMETIC_EXP \')\'\n                     | ARITHMETIC_OP_UNARY ARITHMETIC_EXP %prec uminus\n                     | VALUEARITHMETIC_OP_UNARY : \'+\'\n                           | \'-\' RELATION_EXP : ARITHMETIC_EXP RELATION_OP ARITHMETIC_EXP\n                    | \'(\' RELATION_EXP \')\'ASSIGN_EXP : ID ASSIGN_OP ARITHMETIC_EXP\n                    | ID \'[\' LIST_VALUE \']\' ASSIGN_OP ARITHMETIC_EXPIF_INSTRUCTION : IF \'(\' RELATION_EXP  \')\' INSTRUCTION %prec IF\n                      | IF \'(\' RELATION_EXP  \')\' INSTRUCTION  ELSE INSTRUCTION WHILE_INSTRUCTION : WHILE \'(\' RELATION_EXP  \')\' INSTRUCTION FOR_INSTRUCTION : FOR ID \'=\' ARITHMETIC_EXP \':\' ARITHMETIC_EXP INSTRUCTION PRINT_FUN : PRINT LIST_VALUE \';\'RETURN_FUN : RETURN LIST_VALUE \';\''
    
_lr_action_items = {'{':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[3,3,-2,3,-5,-6,-7,-8,-9,-1,3,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,3,3,-15,-16,-48,-49,-58,-60,-22,-23,-24,3,3,-59,-61,]),'BREAK':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[10,10,-2,10,-5,-6,-7,-8,-9,-1,10,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,10,10,-15,-16,-48,-49,-58,-60,-22,-23,-24,10,10,-59,-61,]),'CONTINUE':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[11,11,-2,11,-5,-6,-7,-8,-9,-1,11,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,11,11,-15,-16,-48,-49,-58,-60,-22,-23,-24,11,11,-59,-61,]),'ID':([0,1,2,3,5,6,7,8,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,42,43,45,47,48,49,50,51,53,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,79,83,84,85,86,87,88,89,90,91,98,99,101,102,103,105,107,108,109,110,111,113,115,116,119,120,121,],[12,12,-2,12,-5,-6,-7,-8,-9,32,37,37,-1,12,-4,-10,-11,37,37,-37,-38,-39,-40,-41,37,37,-17,-18,-20,-21,-25,37,-3,37,37,-51,-52,-53,37,37,-62,37,-19,37,37,37,-26,37,-63,37,-29,-30,-31,-32,-33,-34,-35,-36,-50,12,37,-42,-43,-44,-45,-46,-47,12,-15,-16,-48,-49,37,-58,-60,37,-22,-23,-24,37,12,12,-59,-61,37,]),'IF':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[13,13,-2,13,-5,-6,-7,-8,-9,-1,13,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,13,13,-15,-16,-48,-49,-58,-60,-22,-23,-24,13,13,-59,-61,]),'WHILE':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[14,14,-2,14,-5,-6,-7,-8,-9,-1,14,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,14,14,-15,-16,-48,-49,-58,-60,-22,-23,-24,14,14,-59,-61,]),'FOR':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[15,15,-2,15,-5,-6,-7,-8,-9,-1,15,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,15,15,-15,-16,-48,-49,-58,-60,-22,-23,-24,15,15,-59,-61,]),'PRINT':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[16,16,-2,16,-5,-6,-7,-8,-9,-1,16,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,16,16,-15,-16,-48,-49,-58,-60,-22,-23,-24,16,16,-59,-61,]),'RETURN':([0,1,2,3,5,6,7,8,9,18,19,20,21,22,35,36,37,38,42,45,49,58,60,64,68,79,83,91,98,99,101,102,105,107,109,110,111,115,116,119,120,],[17,17,-2,17,-5,-6,-7,-8,-9,-1,17,-4,-10,-11,-17,-18,-20,-21,-25,-3,-51,-62,-19,-26,-63,-50,17,17,-15,-16,-48,-49,-58,-60,-22,-23,-24,17,17,-59,-61,]),'$end':([1,2,5,6,7,8,9,18,20,21,22,45,58,68,105,107,119,120,],[0,-2,-5,-6,-7,-8,-9,-1,-4,-10,-11,-3,-62,-63,-58,-60,-59,-61,]),'}':([2,5,6,7,8,9,18,19,20,21,22,45,58,68,105,107,119,120,],[-2,-5,-6,-7,-8,-9,-1,45,-4,-10,-11,-3,-62,-63,-58,-60,-59,-61,]),';':([4,10,11,33,34,35,36,37,38,42,44,46,49,60,64,79,93,98,99,101,102,109,110,111,114,],[20,21,22,58,-27,-17,-18,-20,-21,-25,68,-56,-51,-19,-26,-50,-28,-15,-16,-48,-49,-22,-23,-24,-57,]),'ELSE':([5,6,7,8,9,20,21,22,45,58,68,105,107,119,120,],[-5,-6,-7,-8,-9,-4,-10,-11,-3,-62,-63,115,-60,-59,-61,]),'[':([12,16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,100,103,108,113,117,121,],[24,43,43,43,43,-37,-38,-39,-40,-41,43,43,65,43,43,-52,-53,43,43,43,43,43,43,65,43,-29,-30,-31,-32,-33,-34,-35,-36,43,-42,-43,-44,-45,-46,-47,113,43,43,43,121,43,]),'ADDASSIGN':([12,80,],[25,25,]),'SUBASSIGN':([12,80,],[26,26,]),'MULASSIGN':([12,80,],[27,27,]),'DIVASSIGN':([12,80,],[28,28,]),'=':([12,32,80,],[29,57,29,]),'(':([13,14,23,25,26,27,28,29,30,31,39,40,41,47,48,50,51,53,57,61,62,63,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,],[30,31,47,-37,-38,-39,-40,-41,53,53,61,62,63,47,47,-52,-53,53,47,47,47,47,47,-29,-30,-31,-32,-33,-34,-35,-36,47,-42,-43,-44,-45,-46,-47,47,47,]),'INTNUM':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[35,35,35,35,-37,-38,-39,-40,-41,35,35,35,35,35,-52,-53,35,35,35,35,35,35,35,35,-29,-30,-31,-32,-33,-34,-35,-36,35,-42,-43,-44,-45,-46,-47,35,35,35,35,]),'FLOATNUM':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[36,36,36,36,-37,-38,-39,-40,-41,36,36,36,36,36,-52,-53,36,36,36,36,36,36,36,36,-29,-30,-31,-32,-33,-34,-35,-36,36,-42,-43,-44,-45,-46,-47,36,36,36,36,]),'STRING':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[38,38,38,38,-37,-38,-39,-40,-41,38,38,38,38,38,-52,-53,38,38,38,38,38,38,38,38,-29,-30,-31,-32,-33,-34,-35,-36,38,-42,-43,-44,-45,-46,-47,38,38,38,38,]),'EYE':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[39,39,39,39,-37,-38,-39,-40,-41,39,39,39,39,39,-52,-53,39,39,39,39,39,39,39,39,-29,-30,-31,-32,-33,-34,-35,-36,39,-42,-43,-44,-45,-46,-47,39,39,39,39,]),'ZEROS':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[40,40,40,40,-37,-38,-39,-40,-41,40,40,40,40,40,-52,-53,40,40,40,40,40,40,40,40,-29,-30,-31,-32,-33,-34,-35,-36,40,-42,-43,-44,-45,-46,-47,40,40,40,40,]),'ONES':([16,17,23,24,25,26,27,28,29,30,31,43,47,48,50,51,53,57,59,61,62,63,65,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,103,108,113,121,],[41,41,41,41,-37,-38,-39,-40,-41,41,41,41,41,41,-52,-53,41,41,41,41,41,41,41,41,-29,-30,-31,-32,-33,-34,-35,-36,41,-42,-43,-44,-45,-46,-47,41,41,41,41,]),'+':([23,25,26,27,28,29,30,31,35,36,37,38,42,46,47,48,49,50,51,53,55,57,60,61,62,63,64,69,70,71,72,73,74,75,76,77,78,79,82,84,85,86,87,88,89,90,92,94,95,96,98,99,101,102,103,106,108,109,110,111,114,116,],[50,-37,-38,-39,-40,-41,50,50,-17,-18,-20,-21,-25,70,50,50,-51,-52,-53,50,70,50,-19,50,50,50,-26,50,-29,-30,-31,-32,-33,-34,-35,-36,70,-50,70,50,-42,-43,-44,-45,-46,-47,70,70,70,70,-15,-16,-48,-49,50,70,50,-22,-23,-24,70,70,]),'-':([23,25,26,27,28,29,30,31,35,36,37,38,42,46,47,48,49,50,51,53,55,57,60,61,62,63,64,69,70,71,72,73,74,75,76,77,78,79,82,84,85,86,87,88,89,90,92,94,95,96,98,99,101,102,103,106,108,109,110,111,114,116,],[51,-37,-38,-39,-40,-41,51,51,-17,-18,-20,-21,-25,71,51,51,-51,-52,-53,51,71,51,-19,51,51,51,-26,51,-29,-30,-31,-32,-33,-34,-35,-36,71,-50,71,51,-42,-43,-44,-45,-46,-47,71,71,71,71,-15,-16,-48,-49,51,71,51,-22,-23,-24,71,71,]),']':([34,35,36,37,38,42,52,60,64,66,67,93,97,98,99,109,110,111,112,118,122,123,124,],[-27,-17,-18,-20,-21,-25,80,-19,-26,98,99,-28,112,-15,-16,-22,-23,-24,-15,122,-13,124,-14,]),',':([34,35,36,37,38,42,60,64,67,98,99,109,110,111,112,122,124,],[59,-17,-18,-20,-21,-25,-19,-26,100,-15,-16,-22,-23,-24,117,-13,-14,]),'*':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,72,-51,72,-19,-26,72,-50,72,72,72,72,72,-15,-16,-48,-49,72,-22,-23,-24,72,72,]),'/':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,73,-51,73,-19,-26,73,-50,73,73,73,73,73,-15,-16,-48,-49,73,-22,-23,-24,73,73,]),'DOTADD':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,74,-51,74,-19,-26,74,-50,74,74,74,74,74,-15,-16,-48,-49,74,-22,-23,-24,74,74,]),'DOTSUB':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,75,-51,75,-19,-26,75,-50,75,75,75,75,75,-15,-16,-48,-49,75,-22,-23,-24,75,75,]),'DOTMUL':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,76,-51,76,-19,-26,76,-50,76,76,76,76,76,-15,-16,-48,-49,76,-22,-23,-24,76,76,]),'DOTDIV':([35,36,37,38,42,46,49,55,60,64,78,79,82,92,94,95,96,98,99,101,102,106,109,110,111,114,116,],[-17,-18,-20,-21,-25,77,-51,77,-19,-26,77,-50,77,77,77,77,77,-15,-16,-48,-49,77,-22,-23,-24,77,77,]),'GT':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,85,-19,-26,-50,85,-15,-16,-48,-49,-22,-23,-24,]),'LT':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,86,-19,-26,-50,86,-15,-16,-48,-49,-22,-23,-24,]),'LE':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,87,-19,-26,-50,87,-15,-16,-48,-49,-22,-23,-24,]),'GE':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,88,-19,-26,-50,88,-15,-16,-48,-49,-22,-23,-24,]),'NE':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,89,-19,-26,-50,89,-15,-16,-48,-49,-22,-23,-24,]),'EQ':([35,36,37,38,42,49,55,60,64,79,82,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,90,-19,-26,-50,90,-15,-16,-48,-49,-22,-23,-24,]),')':([35,36,37,38,42,49,54,56,60,64,78,79,81,82,94,95,96,98,99,101,102,104,106,109,110,111,],[-17,-18,-20,-21,-25,-51,83,91,-19,-26,102,-50,104,102,109,110,111,-15,-16,-48,-49,-55,-54,-22,-23,-24,]),':':([35,36,37,38,42,49,60,64,79,92,98,99,101,102,109,110,111,],[-17,-18,-20,-21,-25,-51,-19,-26,-50,108,-15,-16,-48,-49,-22,-23,-24,]),"'":([37,42,98,99,112,],[60,64,-15,-16,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,3,],[1,19,]),'INSTRUCTION':([0,1,3,19,83,91,115,116,],[2,18,2,18,105,107,119,120,]),'ASSIGN_EXP':([0,1,3,19,83,91,115,116,],[4,4,4,4,4,4,4,4,]),'IF_INSTRUCTION':([0,1,3,19,83,91,115,116,],[5,5,5,5,5,5,5,5,]),'WHILE_INSTRUCTION':([0,1,3,19,83,91,115,116,],[6,6,6,6,6,6,6,6,]),'FOR_INSTRUCTION':([0,1,3,19,83,91,115,116,],[7,7,7,7,7,7,7,7,]),'PRINT_FUN':([0,1,3,19,83,91,115,116,],[8,8,8,8,8,8,8,8,]),'RETURN_FUN':([0,1,3,19,83,91,115,116,],[9,9,9,9,9,9,9,9,]),'ASSIGN_OP':([12,80,],[23,103,]),'LIST_VALUE':([16,17,24,43,59,65,113,121,],[33,44,52,66,93,97,118,123,]),'VALUE':([16,17,23,24,30,31,43,47,48,53,57,59,61,62,63,65,69,84,103,108,113,121,],[34,34,49,34,49,49,34,49,49,49,49,34,49,49,49,34,49,49,49,49,34,34,]),'MATRIX':([16,17,23,24,30,31,43,47,48,53,57,59,61,62,63,65,69,84,103,108,113,121,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ARITHMETIC_EXP':([23,30,31,47,48,53,57,61,62,63,69,84,103,108,],[46,55,55,78,79,82,92,94,95,96,101,106,114,116,]),'ARITHMETIC_OP_UNARY':([23,30,31,47,48,53,57,61,62,63,69,84,103,108,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'RELATION_EXP':([30,31,53,],[54,56,81,]),'VECTOR_LIST':([43,65,],[67,67,]),'ARITHMETIC_OP':([46,55,78,79,82,92,94,95,96,101,106,114,116,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'RELATION_OP':([55,82,],[84,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> START INSTRUCTION','START',2,'p_start','Mparser.py',33),
  ('START -> INSTRUCTION','START',1,'p_start','Mparser.py',34),
  ('INSTRUCTION -> { START }','INSTRUCTION',3,'p_instruction','Mparser.py',37),
  ('INSTRUCTION -> ASSIGN_EXP ;','INSTRUCTION',2,'p_instruction','Mparser.py',38),
  ('INSTRUCTION -> IF_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',39),
  ('INSTRUCTION -> WHILE_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',40),
  ('INSTRUCTION -> FOR_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',41),
  ('INSTRUCTION -> PRINT_FUN','INSTRUCTION',1,'p_instruction','Mparser.py',42),
  ('INSTRUCTION -> RETURN_FUN','INSTRUCTION',1,'p_instruction','Mparser.py',43),
  ('INSTRUCTION -> BREAK ;','INSTRUCTION',2,'p_instruction','Mparser.py',44),
  ('INSTRUCTION -> CONTINUE ;','INSTRUCTION',2,'p_instruction','Mparser.py',45),
  ('empty -> <empty>','empty',0,'p_empty','Mparser.py',48),
  ('VECTOR_LIST -> VECTOR_LIST , [ LIST_VALUE ]','VECTOR_LIST',5,'p_basic_vector_list','Mparser.py',51),
  ('VECTOR_LIST -> [ LIST_VALUE ] , [ LIST_VALUE ]','VECTOR_LIST',7,'p_basic_vector_list','Mparser.py',52),
  ('MATRIX -> [ LIST_VALUE ]','MATRIX',3,'p_basic_matix','Mparser.py',55),
  ('MATRIX -> [ VECTOR_LIST ]','MATRIX',3,'p_basic_matix','Mparser.py',56),
  ('VALUE -> INTNUM','VALUE',1,'p_basic_value','Mparser.py',59),
  ('VALUE -> FLOATNUM','VALUE',1,'p_basic_value','Mparser.py',60),
  ("VALUE -> ID '",'VALUE',2,'p_basic_value','Mparser.py',61),
  ('VALUE -> ID','VALUE',1,'p_basic_value','Mparser.py',62),
  ('VALUE -> STRING','VALUE',1,'p_basic_value','Mparser.py',63),
  ('VALUE -> EYE ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',64),
  ('VALUE -> ZEROS ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',65),
  ('VALUE -> ONES ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',66),
  ('VALUE -> MATRIX','VALUE',1,'p_basic_value','Mparser.py',67),
  ("VALUE -> MATRIX '",'VALUE',2,'p_basic_value','Mparser.py',68),
  ('LIST_VALUE -> VALUE','LIST_VALUE',1,'p_basic_list_values','Mparser.py',71),
  ('LIST_VALUE -> VALUE , LIST_VALUE','LIST_VALUE',3,'p_basic_list_values','Mparser.py',72),
  ('ARITHMETIC_OP -> +','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',75),
  ('ARITHMETIC_OP -> -','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',76),
  ('ARITHMETIC_OP -> *','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',77),
  ('ARITHMETIC_OP -> /','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',78),
  ('ARITHMETIC_OP -> DOTADD','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',79),
  ('ARITHMETIC_OP -> DOTSUB','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',80),
  ('ARITHMETIC_OP -> DOTMUL','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',81),
  ('ARITHMETIC_OP -> DOTDIV','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',82),
  ('ASSIGN_OP -> ADDASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',85),
  ('ASSIGN_OP -> SUBASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',86),
  ('ASSIGN_OP -> MULASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',87),
  ('ASSIGN_OP -> DIVASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',88),
  ('ASSIGN_OP -> =','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',89),
  ('RELATION_OP -> GT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',92),
  ('RELATION_OP -> LT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',93),
  ('RELATION_OP -> LE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',94),
  ('RELATION_OP -> GE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',95),
  ('RELATION_OP -> NE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',96),
  ('RELATION_OP -> EQ','RELATION_OP',1,'p_basic_relation_op','Mparser.py',97),
  ('ARITHMETIC_EXP -> ARITHMETIC_EXP ARITHMETIC_OP ARITHMETIC_EXP','ARITHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',100),
  ('ARITHMETIC_EXP -> ( ARITHMETIC_EXP )','ARITHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',101),
  ('ARITHMETIC_EXP -> ARITHMETIC_OP_UNARY ARITHMETIC_EXP','ARITHMETIC_EXP',2,'p_exp_arithmetic','Mparser.py',102),
  ('ARITHMETIC_EXP -> VALUE','ARITHMETIC_EXP',1,'p_exp_arithmetic','Mparser.py',103),
  ('ARITHMETIC_OP_UNARY -> +','ARITHMETIC_OP_UNARY',1,'p_basic_arithmetic_op_unar','Mparser.py',106),
  ('ARITHMETIC_OP_UNARY -> -','ARITHMETIC_OP_UNARY',1,'p_basic_arithmetic_op_unar','Mparser.py',107),
  ('RELATION_EXP -> ARITHMETIC_EXP RELATION_OP ARITHMETIC_EXP','RELATION_EXP',3,'p_exp_relation','Mparser.py',110),
  ('RELATION_EXP -> ( RELATION_EXP )','RELATION_EXP',3,'p_exp_relation','Mparser.py',111),
  ('ASSIGN_EXP -> ID ASSIGN_OP ARITHMETIC_EXP','ASSIGN_EXP',3,'p_exp_assign','Mparser.py',114),
  ('ASSIGN_EXP -> ID [ LIST_VALUE ] ASSIGN_OP ARITHMETIC_EXP','ASSIGN_EXP',6,'p_exp_assign','Mparser.py',115),
  ('IF_INSTRUCTION -> IF ( RELATION_EXP ) INSTRUCTION','IF_INSTRUCTION',5,'p_instruction_if','Mparser.py',118),
  ('IF_INSTRUCTION -> IF ( RELATION_EXP ) INSTRUCTION ELSE INSTRUCTION','IF_INSTRUCTION',7,'p_instruction_if','Mparser.py',119),
  ('WHILE_INSTRUCTION -> WHILE ( RELATION_EXP ) INSTRUCTION','WHILE_INSTRUCTION',5,'p_instruction_while','Mparser.py',127),
  ('FOR_INSTRUCTION -> FOR ID = ARITHMETIC_EXP : ARITHMETIC_EXP INSTRUCTION','FOR_INSTRUCTION',7,'p_instruction_for','Mparser.py',130),
  ('PRINT_FUN -> PRINT LIST_VALUE ;','PRINT_FUN',3,'p_fun_print','Mparser.py',133),
  ('RETURN_FUN -> RETURN LIST_VALUE ;','RETURN_FUN',3,'p_fun_return','Mparser.py',136),
]
