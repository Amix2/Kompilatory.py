
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-DOTADDDOTSUBleft*/DOTMULDOTDIVnonassocLTGTLEGENEEQnonassocADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleft\'nonassoc:,left()[]left{}right;leftIFELSEFORWHILEADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSSTART : \'{\' START \'}\' \n             | START START  \n             | ASSIGN_EXP \';\' \n             | IF_INSTR \n             | WHILE_INSTR \n             | FOR_INSTR \n             | PRINT_FUN \n             | RETURN_FUN \';\'\n             | BREAK \';\' \n             | CONTINUE \';\'empty :VALUE_SINGLE : INTNUM \n                    | FLOATNUM \n                    | ID "\'"\n                    | ID \n                    | STRINGLIST_VALUE_SINGLE : VALUE_SINGLE \n                         | VALUE_SINGLE \',\' LIST_VALUE_SINGLEMATRIX_ROW_LIST : \'[\' LIST_VALUE_SINGLE \']\' \',\' MATRIX_ROW_LIST \n                        | \'[\' LIST_VALUE_SINGLE \']\' \',\' \'[\' LIST_VALUE_SINGLE \']\'MATRIX : \'[\' MATRIX_ROW_LIST \']\' \n              | \'[\' LIST_VALUE_SINGLE \']\'\n              | MATRIX "\'" VALUE : VALUE_SINGLE \n             | MATRIX  LIST_VALUE : VALUE \n                  | VALUE \',\' LIST_VALUEARITHMETIC_OP : \'+\' \n                     | \'-\' \n                     | \'*\' \n                     | \'/\' \n                     | DOTADD \n                     | DOTSUB \n                     | DOTMUL \n                     | DOTDIVASSIGN_OP : ADDASSIGN \n                 | SUBASSIGN \n                 | MULASSIGN \n                 | DIVASSIGN\n                 | \'=\' RELATION_OP : LT \n                   | GT \n                   | LE \n                   | GE \n                   | NE \n                   | EQARTHMETIC_EXP : VALUE \n                     | ARITHMETIC_OP_UNAR ARTHMETIC_EXP \n                     | ARTHMETIC_EXP ARITHMETIC_OP ARTHMETIC_EXP \n                     | \'(\' ARTHMETIC_EXP \')\' \n                     | EYE \'(\' ARTHMETIC_EXP \')\' \n                     | ZEROS \'(\' ARTHMETIC_EXP \')\' \n                     | ONES \'(\' ARTHMETIC_EXP \')\'ARITHMETIC_OP_UNAR : \'+\' \n                          | \'-\' \n                          | ARITHMETIC_OP_UNAR ARITHMETIC_OP_UNARRELATION_EXP : ARTHMETIC_EXP RELATION_OP ARTHMETIC_EXP \n                    | \'(\' RELATION_EXP \')\'ASSIGN_EXP : ID ASSIGN_OP ARTHMETIC_EXP \n                    | ID \'[\' LIST_VALUE \']\' ASSIGN_OP ARTHMETIC_EXPIF_INSTR : IF \'(\' RELATION_EXP  \')\' START \n                | IF \'(\' RELATION_EXP  \')\' START ELSE STARTWHILE_INSTR : WHILE \'(\' RELATION_EXP  \')\' STARTFOR_INSTR : FOR ID \'=\' ARTHMETIC_EXP \':\' ARTHMETIC_EXP STARTPRINT_FUN : PRINT LIST_VALUE \';\'RETURN_FUN : RETURN LIST_VALUE \';\''
    
_lr_action_items = {'{':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[2,2,2,-4,-5,-6,-7,2,2,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,2,2,-21,-22,-49,-50,2,2,-51,-52,-53,2,2,-62,2,]),'BREAK':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[9,9,9,-4,-5,-6,-7,9,9,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,9,9,-21,-22,-49,-50,-61,-63,-51,-52,-53,9,9,-62,-64,]),'CONTINUE':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[10,10,10,-4,-5,-6,-7,10,10,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,10,10,-21,-22,-49,-50,-61,-63,-51,-52,-53,10,10,-62,-64,]),'ID':([0,1,2,4,5,6,7,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,43,45,46,47,51,52,54,58,59,60,61,62,63,68,69,70,71,72,73,74,75,76,77,78,80,81,82,86,87,88,89,90,91,92,93,94,98,99,100,101,102,106,108,110,111,114,115,116,118,119,121,122,123,],[11,11,11,-4,-5,-6,-7,32,39,39,11,11,-3,-8,-9,-10,39,39,-36,-37,-38,-39,-40,39,39,-24,-25,-12,-13,-15,-16,39,-1,-47,39,39,-54,-55,39,39,-65,39,-23,-14,39,39,-28,-29,-30,-31,-32,-33,-34,-35,39,-48,39,39,39,11,39,-41,-42,-43,-44,-45,-46,11,-21,-22,39,-49,-50,39,-61,-63,39,-51,-52,-53,11,11,-62,-64,39,]),'IF':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[12,12,12,-4,-5,-6,-7,12,12,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,12,12,-21,-22,-49,-50,12,12,-51,-52,-53,12,12,-62,12,]),'WHILE':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[13,13,13,-4,-5,-6,-7,13,13,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,13,13,-21,-22,-49,-50,13,13,-51,-52,-53,13,13,-62,13,]),'FOR':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[14,14,14,-4,-5,-6,-7,14,14,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,14,14,-21,-22,-49,-50,14,14,-51,-52,-53,14,14,-62,14,]),'PRINT':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[15,15,15,-4,-5,-6,-7,15,15,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,15,15,-21,-22,-49,-50,-61,-63,-51,-52,-53,15,15,-62,-64,]),'RETURN':([0,1,2,4,5,6,7,17,18,19,20,21,22,35,36,37,38,39,40,43,45,59,61,62,78,86,94,98,99,101,102,108,110,114,115,116,118,119,121,122,],[16,16,16,-4,-5,-6,-7,16,16,-3,-8,-9,-10,-24,-25,-12,-13,-15,-16,-1,-47,-65,-23,-14,-48,16,16,-21,-22,-49,-50,-61,-63,-51,-52,-53,16,16,-62,-64,]),'$end':([1,4,5,6,7,17,19,20,21,22,43,59,108,110,121,122,],[0,-4,-5,-6,-7,-2,-3,-8,-9,-10,-1,-65,-61,-63,-62,-64,]),';':([3,8,9,10,33,34,35,36,37,38,39,40,42,44,45,61,62,67,78,96,98,99,101,102,114,115,116,117,],[19,20,21,22,59,-26,-24,-25,-12,-13,-15,-16,67,-59,-47,-23,-14,-66,-48,-27,-21,-22,-49,-50,-51,-52,-53,-60,]),'}':([4,5,6,7,17,18,19,20,21,22,43,59,108,110,121,122,],[-4,-5,-6,-7,-2,43,-3,-8,-9,-10,-1,-65,-61,-63,-62,-64,]),'ELSE':([4,5,6,7,17,19,20,21,22,43,59,108,110,121,122,],[-4,-5,-6,-7,-2,-3,-8,-9,-10,-1,-65,118,-63,-62,-64,]),'[':([11,15,16,23,24,25,26,27,28,29,30,31,41,46,47,51,52,54,58,60,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,106,111,120,],[24,41,41,41,41,-36,-37,-38,-39,-40,41,41,63,41,41,-54,-55,41,41,41,41,-28,-29,-30,-31,-32,-33,-34,-35,41,41,41,41,41,-41,-42,-43,-44,-45,-46,41,41,123,]),'ADDASSIGN':([11,83,],[25,25,]),'SUBASSIGN':([11,83,],[26,26,]),'MULASSIGN':([11,83,],[27,27,]),'DIVASSIGN':([11,83,],[28,28,]),'=':([11,32,83,],[29,58,29,]),'(':([12,13,23,25,26,27,28,29,30,31,46,47,48,49,50,51,52,54,58,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,106,111,],[30,31,47,-36,-37,-38,-39,-40,54,54,47,47,80,81,82,-54,-55,54,47,47,-28,-29,-30,-31,-32,-33,-34,-35,47,47,47,47,47,-41,-42,-43,-44,-45,-46,47,47,]),'INTNUM':([15,16,23,24,25,26,27,28,29,30,31,41,46,47,51,52,54,58,60,63,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,100,106,111,123,],[37,37,37,37,-36,-37,-38,-39,-40,37,37,37,37,37,-54,-55,37,37,37,37,37,-28,-29,-30,-31,-32,-33,-34,-35,37,37,37,37,37,-41,-42,-43,-44,-45,-46,37,37,37,37,]),'FLOATNUM':([15,16,23,24,25,26,27,28,29,30,31,41,46,47,51,52,54,58,60,63,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,100,106,111,123,],[38,38,38,38,-36,-37,-38,-39,-40,38,38,38,38,38,-54,-55,38,38,38,38,38,-28,-29,-30,-31,-32,-33,-34,-35,38,38,38,38,38,-41,-42,-43,-44,-45,-46,38,38,38,38,]),'STRING':([15,16,23,24,25,26,27,28,29,30,31,41,46,47,51,52,54,58,60,63,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,100,106,111,123,],[40,40,40,40,-36,-37,-38,-39,-40,40,40,40,40,40,-54,-55,40,40,40,40,40,-28,-29,-30,-31,-32,-33,-34,-35,40,40,40,40,40,-41,-42,-43,-44,-45,-46,40,40,40,40,]),'EYE':([23,25,26,27,28,29,30,31,46,47,51,52,54,58,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,106,111,],[48,-36,-37,-38,-39,-40,48,48,48,48,-54,-55,48,48,48,-28,-29,-30,-31,-32,-33,-34,-35,48,48,48,48,48,-41,-42,-43,-44,-45,-46,48,48,]),'ZEROS':([23,25,26,27,28,29,30,31,46,47,51,52,54,58,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,106,111,],[49,-36,-37,-38,-39,-40,49,49,49,49,-54,-55,49,49,49,-28,-29,-30,-31,-32,-33,-34,-35,49,49,49,49,49,-41,-42,-43,-44,-45,-46,49,49,]),'ONES':([23,25,26,27,28,29,30,31,46,47,51,52,54,58,68,69,70,71,72,73,74,75,76,77,80,81,82,87,88,89,90,91,92,93,106,111,],[50,-36,-37,-38,-39,-40,50,50,50,50,-54,-55,50,50,50,-28,-29,-30,-31,-32,-33,-34,-35,50,50,50,50,50,-41,-42,-43,-44,-45,-46,50,50,]),'+':([23,25,26,27,28,29,30,31,35,36,37,38,39,40,44,45,46,47,51,52,54,56,58,61,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,95,98,99,101,102,103,104,105,106,109,111,114,115,116,117,119,],[51,-36,-37,-38,-39,-40,51,51,-24,-25,-12,-13,-15,-16,69,-47,51,51,-54,-55,51,69,51,-23,-14,51,-28,-29,-30,-31,-32,-33,-34,-35,51,69,69,51,51,51,69,51,-41,-42,-43,-44,-45,-46,69,-21,-22,69,-50,69,69,69,51,69,51,-51,-52,-53,69,69,]),'-':([23,25,26,27,28,29,30,31,35,36,37,38,39,40,44,45,46,47,51,52,54,56,58,61,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,95,98,99,101,102,103,104,105,106,109,111,114,115,116,117,119,],[52,-36,-37,-38,-39,-40,52,52,-24,-25,-12,-13,-15,-16,70,-47,52,52,-54,-55,52,70,52,-23,-14,52,-28,-29,-30,-31,-32,-33,-34,-35,52,70,70,52,52,52,70,52,-41,-42,-43,-44,-45,-46,70,-21,-22,70,-50,70,70,70,52,70,52,-51,-52,-53,70,70,]),']':([34,35,36,37,38,39,40,53,61,62,64,65,66,96,97,98,99,113,124,125,126,],[-26,-24,-25,-12,-13,-15,-16,83,-23,-14,98,99,-17,-27,112,-21,-22,-18,-19,126,-20,]),',':([34,35,36,37,38,39,40,61,62,66,98,99,112,126,],[60,-24,-25,-12,-13,-15,-16,-23,-14,100,-21,-22,120,120,]),'*':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,71,-47,71,-23,-14,71,71,71,71,-21,-22,71,-50,71,71,71,71,-51,-52,-53,71,71,]),'/':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,72,-47,72,-23,-14,72,72,72,72,-21,-22,72,-50,72,72,72,72,-51,-52,-53,72,72,]),'DOTADD':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,73,-47,73,-23,-14,73,73,73,73,-21,-22,73,-50,73,73,73,73,-51,-52,-53,73,73,]),'DOTSUB':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,74,-47,74,-23,-14,74,74,74,74,-21,-22,74,-50,74,74,74,74,-51,-52,-53,74,74,]),'DOTMUL':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,75,-47,75,-23,-14,75,75,75,75,-21,-22,75,-50,75,75,75,75,-51,-52,-53,75,75,]),'DOTDIV':([35,36,37,38,39,40,44,45,56,61,62,78,79,85,95,98,99,101,102,103,104,105,109,114,115,116,117,119,],[-24,-25,-12,-13,-15,-16,76,-47,76,-23,-14,76,76,76,76,-21,-22,76,-50,76,76,76,76,-51,-52,-53,76,76,]),'LT':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,88,-23,-14,-48,88,-21,-22,-49,-50,-51,-52,-53,]),'GT':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,89,-23,-14,-48,89,-21,-22,-49,-50,-51,-52,-53,]),'LE':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,90,-23,-14,-48,90,-21,-22,-49,-50,-51,-52,-53,]),'GE':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,91,-23,-14,-48,91,-21,-22,-49,-50,-51,-52,-53,]),'NE':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,92,-23,-14,-48,92,-21,-22,-49,-50,-51,-52,-53,]),'EQ':([35,36,37,38,39,40,45,56,61,62,78,85,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,93,-23,-14,-48,93,-21,-22,-49,-50,-51,-52,-53,]),')':([35,36,37,38,39,40,45,55,57,61,62,78,79,84,85,98,99,101,102,103,104,105,107,109,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,86,94,-23,-14,-48,102,107,102,-21,-22,-49,-50,114,115,116,-58,-57,-51,-52,-53,]),':':([35,36,37,38,39,40,45,61,62,78,95,98,99,101,102,114,115,116,],[-24,-25,-12,-13,-15,-16,-47,-23,-14,-48,111,-21,-22,-49,-50,-51,-52,-53,]),"'":([36,39,61,98,99,],[61,62,-23,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[1,17,18,17,17,108,110,17,17,121,122,17,17,]),'ASSIGN_EXP':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'IF_INSTR':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE_INSTR':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FOR_INSTR':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'PRINT_FUN':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'RETURN_FUN':([0,1,2,17,18,86,94,108,110,118,119,121,122,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ASSIGN_OP':([11,83,],[23,106,]),'LIST_VALUE':([15,16,24,60,],[33,42,53,96,]),'VALUE':([15,16,23,24,30,31,46,47,54,58,60,68,77,80,81,82,87,106,111,],[34,34,45,34,45,45,45,45,45,45,34,45,45,45,45,45,45,45,45,]),'VALUE_SINGLE':([15,16,23,24,30,31,41,46,47,54,58,60,63,68,77,80,81,82,87,100,106,111,123,],[35,35,35,35,35,35,66,35,35,35,35,35,66,35,35,35,35,35,35,66,35,35,66,]),'MATRIX':([15,16,23,24,30,31,46,47,54,58,60,68,77,80,81,82,87,106,111,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ARTHMETIC_EXP':([23,30,31,46,47,54,58,68,77,80,81,82,87,106,111,],[44,56,56,78,79,85,95,101,78,103,104,105,109,117,119,]),'ARITHMETIC_OP_UNAR':([23,30,31,46,47,54,58,68,77,80,81,82,87,106,111,],[46,46,46,77,46,46,46,46,77,46,46,46,46,46,46,]),'RELATION_EXP':([30,31,54,],[55,57,84,]),'MATRIX_ROW_LIST':([41,120,],[64,124,]),'LIST_VALUE_SINGLE':([41,63,100,123,],[65,97,113,125,]),'ARITHMETIC_OP':([44,56,78,79,85,95,101,103,104,105,109,117,119,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'RELATION_OP':([56,85,],[87,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> { START }','START',3,'p_start','Mparser.py',34),
  ('START -> START START','START',2,'p_start','Mparser.py',35),
  ('START -> ASSIGN_EXP ;','START',2,'p_start','Mparser.py',36),
  ('START -> IF_INSTR','START',1,'p_start','Mparser.py',37),
  ('START -> WHILE_INSTR','START',1,'p_start','Mparser.py',38),
  ('START -> FOR_INSTR','START',1,'p_start','Mparser.py',39),
  ('START -> PRINT_FUN','START',1,'p_start','Mparser.py',40),
  ('START -> RETURN_FUN ;','START',2,'p_start','Mparser.py',41),
  ('START -> BREAK ;','START',2,'p_start','Mparser.py',42),
  ('START -> CONTINUE ;','START',2,'p_start','Mparser.py',43),
  ('empty -> <empty>','empty',0,'p_empty','Mparser.py',47),
  ('VALUE_SINGLE -> INTNUM','VALUE_SINGLE',1,'p_basic_value_single','Mparser.py',51),
  ('VALUE_SINGLE -> FLOATNUM','VALUE_SINGLE',1,'p_basic_value_single','Mparser.py',52),
  ("VALUE_SINGLE -> ID '",'VALUE_SINGLE',2,'p_basic_value_single','Mparser.py',53),
  ('VALUE_SINGLE -> ID','VALUE_SINGLE',1,'p_basic_value_single','Mparser.py',54),
  ('VALUE_SINGLE -> STRING','VALUE_SINGLE',1,'p_basic_value_single','Mparser.py',55),
  ('LIST_VALUE_SINGLE -> VALUE_SINGLE','LIST_VALUE_SINGLE',1,'p_basic_list_values_single','Mparser.py',58),
  ('LIST_VALUE_SINGLE -> VALUE_SINGLE , LIST_VALUE_SINGLE','LIST_VALUE_SINGLE',3,'p_basic_list_values_single','Mparser.py',59),
  ('MATRIX_ROW_LIST -> [ LIST_VALUE_SINGLE ] , MATRIX_ROW_LIST','MATRIX_ROW_LIST',5,'p_basic_matrix_row_list','Mparser.py',62),
  ('MATRIX_ROW_LIST -> [ LIST_VALUE_SINGLE ] , [ LIST_VALUE_SINGLE ]','MATRIX_ROW_LIST',7,'p_basic_matrix_row_list','Mparser.py',63),
  ('MATRIX -> [ MATRIX_ROW_LIST ]','MATRIX',3,'p_basic_matix','Mparser.py',66),
  ('MATRIX -> [ LIST_VALUE_SINGLE ]','MATRIX',3,'p_basic_matix','Mparser.py',67),
  ("MATRIX -> MATRIX '",'MATRIX',2,'p_basic_matix','Mparser.py',68),
  ('VALUE -> VALUE_SINGLE','VALUE',1,'p_basic_value','Mparser.py',71),
  ('VALUE -> MATRIX','VALUE',1,'p_basic_value','Mparser.py',72),
  ('LIST_VALUE -> VALUE','LIST_VALUE',1,'p_basic_list_values','Mparser.py',75),
  ('LIST_VALUE -> VALUE , LIST_VALUE','LIST_VALUE',3,'p_basic_list_values','Mparser.py',76),
  ('ARITHMETIC_OP -> +','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',79),
  ('ARITHMETIC_OP -> -','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',80),
  ('ARITHMETIC_OP -> *','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',81),
  ('ARITHMETIC_OP -> /','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',82),
  ('ARITHMETIC_OP -> DOTADD','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',83),
  ('ARITHMETIC_OP -> DOTSUB','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',84),
  ('ARITHMETIC_OP -> DOTMUL','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',85),
  ('ARITHMETIC_OP -> DOTDIV','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',86),
  ('ASSIGN_OP -> ADDASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',89),
  ('ASSIGN_OP -> SUBASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',90),
  ('ASSIGN_OP -> MULASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',91),
  ('ASSIGN_OP -> DIVASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',92),
  ('ASSIGN_OP -> =','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',93),
  ('RELATION_OP -> LT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',96),
  ('RELATION_OP -> GT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',97),
  ('RELATION_OP -> LE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',98),
  ('RELATION_OP -> GE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',99),
  ('RELATION_OP -> NE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',100),
  ('RELATION_OP -> EQ','RELATION_OP',1,'p_basic_relation_op','Mparser.py',101),
  ('ARTHMETIC_EXP -> VALUE','ARTHMETIC_EXP',1,'p_exp_arithmetic','Mparser.py',104),
  ('ARTHMETIC_EXP -> ARITHMETIC_OP_UNAR ARTHMETIC_EXP','ARTHMETIC_EXP',2,'p_exp_arithmetic','Mparser.py',105),
  ('ARTHMETIC_EXP -> ARTHMETIC_EXP ARITHMETIC_OP ARTHMETIC_EXP','ARTHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',106),
  ('ARTHMETIC_EXP -> ( ARTHMETIC_EXP )','ARTHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',107),
  ('ARTHMETIC_EXP -> EYE ( ARTHMETIC_EXP )','ARTHMETIC_EXP',4,'p_exp_arithmetic','Mparser.py',108),
  ('ARTHMETIC_EXP -> ZEROS ( ARTHMETIC_EXP )','ARTHMETIC_EXP',4,'p_exp_arithmetic','Mparser.py',109),
  ('ARTHMETIC_EXP -> ONES ( ARTHMETIC_EXP )','ARTHMETIC_EXP',4,'p_exp_arithmetic','Mparser.py',110),
  ('ARITHMETIC_OP_UNAR -> +','ARITHMETIC_OP_UNAR',1,'p_basic_arithmetic_op_unar','Mparser.py',113),
  ('ARITHMETIC_OP_UNAR -> -','ARITHMETIC_OP_UNAR',1,'p_basic_arithmetic_op_unar','Mparser.py',114),
  ('ARITHMETIC_OP_UNAR -> ARITHMETIC_OP_UNAR ARITHMETIC_OP_UNAR','ARITHMETIC_OP_UNAR',2,'p_basic_arithmetic_op_unar','Mparser.py',115),
  ('RELATION_EXP -> ARTHMETIC_EXP RELATION_OP ARTHMETIC_EXP','RELATION_EXP',3,'p_exp_relation','Mparser.py',118),
  ('RELATION_EXP -> ( RELATION_EXP )','RELATION_EXP',3,'p_exp_relation','Mparser.py',119),
  ('ASSIGN_EXP -> ID ASSIGN_OP ARTHMETIC_EXP','ASSIGN_EXP',3,'p_exp_assign','Mparser.py',122),
  ('ASSIGN_EXP -> ID [ LIST_VALUE ] ASSIGN_OP ARTHMETIC_EXP','ASSIGN_EXP',6,'p_exp_assign','Mparser.py',123),
  ('IF_INSTR -> IF ( RELATION_EXP ) START','IF_INSTR',5,'p_instr_if','Mparser.py',126),
  ('IF_INSTR -> IF ( RELATION_EXP ) START ELSE START','IF_INSTR',7,'p_instr_if','Mparser.py',127),
  ('WHILE_INSTR -> WHILE ( RELATION_EXP ) START','WHILE_INSTR',5,'p_instr_while','Mparser.py',130),
  ('FOR_INSTR -> FOR ID = ARTHMETIC_EXP : ARTHMETIC_EXP START','FOR_INSTR',7,'p_instr_for','Mparser.py',133),
  ('PRINT_FUN -> PRINT LIST_VALUE ;','PRINT_FUN',3,'p_fun_print','Mparser.py',136),
  ('RETURN_FUN -> RETURN LIST_VALUE ;','RETURN_FUN',3,'p_fun_return','Mparser.py',139),
]
