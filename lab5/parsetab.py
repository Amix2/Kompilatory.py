
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFleftELSEnonassocGTLTLEGENEEQnonassocADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNleft*/DOTMULDOTDIVleft+-DOTADDDOTSUBleftexprrightuminusleft\'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSSTART : START INSTRUCTION\n             | INSTRUCTION INSTRUCTION : \'{\' START \'}\'\n                   | ASSIGN_EXP\n                   | IF_INSTRUCTION\n                   | WHILE_INSTRUCTION\n                   | FOR_INSTRUCTION\n                   | PRINT_FUN\n                   | RETURN_FUN\n                   | BREAK_GR\n                   | CONTINUE_GR BREAK_GR : BREAK \';\' CONTINUE_GR : CONTINUE \';\' VECTOR : \'[\' LIST_VALUE \']\'STRING_GR : STRINGINT_GR : INTNUMFLOAT_GR : FLOATNUMID_GR : IDVALUE : INT_GR\n             | FLOAT_GR\n             | ID_GR\n             | STRING_GR\n             | EYE \'(\' ARITHMETIC_EXP \')\'\n             | ZEROS \'(\' ARITHMETIC_EXP \')\'\n             | ONES \'(\' ARITHMETIC_EXP \')\'\n             | VECTOR\n             | ID_GR \'[\' LIST_VALUE \']\'\n             | VALUE "\'" LIST_VALUE : ARITHMETIC_EXP\n                  | ARITHMETIC_EXP \',\' LIST_VALUEARITHMETIC_OP : \'+\'\n                     | \'-\'\n                     | \'*\'\n                     | \'/\'\n                     | DOTADD\n                     | DOTSUB\n                     | DOTMUL\n                     | DOTDIV ASSIGN_OP : ADDASSIGN\n                 | SUBASSIGN\n                 | MULASSIGN\n                 | DIVASSIGN\n                 | \'=\' RELATION_OP : GT\n                   | LT\n                   | LE\n                   | GE\n                   | NE\n                   | EQ ARITHMETIC_OP_UNARY : \'+\'\n                           | \'-\' ARITHMETIC_EXP : ARITHMETIC_EXP ARITHMETIC_OP ARITHMETIC_EXP %prec expr\n                     | \'(\' ARITHMETIC_EXP \')\'\n                     | ARITHMETIC_OP_UNARY ARITHMETIC_EXP %prec uminus\n                     | VALUERELATION_EXP : ARITHMETIC_EXP RELATION_OP ARITHMETIC_EXP\n                    | \'(\' RELATION_EXP \')\'ASSIGN_EXP : ID_GR ASSIGN_OP ARITHMETIC_EXP \';\'\n                    | ID_GR \'[\' LIST_VALUE \']\' ASSIGN_OP ARITHMETIC_EXP \';\' IF_INSTRUCTION : IF \'(\' RELATION_EXP  \')\' INSTRUCTION %prec IF\n                      | IF \'(\' RELATION_EXP  \')\' INSTRUCTION  ELSE INSTRUCTION WHILE_INSTRUCTION : WHILE \'(\' RELATION_EXP  \')\' INSTRUCTION FOR_INSTRUCTION : FOR ID_GR \'=\' ARITHMETIC_EXP \':\' ARITHMETIC_EXP INSTRUCTION PRINT_FUN : PRINT LIST_VALUE \';\'RETURN_FUN : RETURN LIST_VALUE \';\''
    
_lr_action_items = {'{':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[3,3,-2,3,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,3,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,3,3,-52,-53,-14,-60,-62,-27,-23,-24,-25,3,3,-59,-61,-63,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[13,13,-2,13,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,13,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,13,13,-52,-53,-14,-60,-62,-27,-23,-24,-25,13,13,-59,-61,-63,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[14,14,-2,14,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,14,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,14,14,-52,-53,-14,-60,-62,-27,-23,-24,-25,14,14,-59,-61,-63,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[15,15,-2,15,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,15,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,15,15,-52,-53,-14,-60,-62,-27,-23,-24,-25,15,15,-59,-61,-63,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[16,16,-2,16,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,16,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,16,16,-52,-53,-14,-60,-62,-27,-23,-24,-25,16,16,-59,-61,-63,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[17,17,-2,17,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,17,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,17,17,-52,-53,-14,-60,-62,-27,-23,-24,-25,17,17,-59,-61,-63,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[18,18,-2,18,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,18,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,18,18,-52,-53,-14,-60,-62,-27,-23,-24,-25,18,18,-59,-61,-63,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,20,21,22,37,40,41,42,43,47,49,50,51,53,54,55,63,75,76,82,83,87,95,98,99,104,107,109,111,112,113,114,116,117,118,119,120,],[19,19,-2,19,-4,-5,-6,-7,-8,-9,-10,-11,-18,-1,19,-55,-19,-20,-21,-22,-26,-16,-17,-15,-12,-13,-3,-64,-54,-28,-65,-58,19,19,-52,-53,-14,-60,-62,-27,-23,-24,-25,19,19,-59,-61,-63,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,47,48,49,50,51,53,54,55,58,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,82,83,87,88,89,90,91,92,93,94,95,98,99,104,105,107,109,110,111,112,113,114,116,117,118,119,120,],[20,20,-2,20,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,-18,-1,20,20,20,-39,-40,-41,-42,-43,20,20,20,20,-55,-50,-51,-19,-20,-21,-22,-26,20,-16,-17,-15,-12,-13,-3,20,20,-64,20,20,-31,-32,-33,-34,-35,-36,-37,-38,-54,-28,20,20,20,20,-65,-58,20,20,-44,-45,-46,-47,-48,-49,20,-52,-53,-14,20,-60,-62,20,-27,-23,-24,-25,20,20,-59,-61,-63,]),'$end':([1,2,4,5,6,7,8,9,10,11,21,53,54,55,63,82,83,107,109,118,119,120,],[0,-2,-4,-5,-6,-7,-8,-9,-10,-11,-1,-12,-13,-3,-64,-65,-58,-60,-62,-59,-61,-63,]),'}':([2,4,5,6,7,8,9,10,11,21,22,53,54,55,63,82,83,107,109,118,119,120,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-1,55,-12,-13,-3,-64,-65,-58,-60,-62,-59,-61,-63,]),'ELSE':([4,5,6,7,8,9,10,11,53,54,55,63,82,83,107,109,118,119,120,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-3,-64,-65,-58,116,-62,-59,-61,-63,]),'[':([12,16,17,20,23,24,25,26,27,28,29,30,31,35,36,38,39,42,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[24,48,48,-18,48,48,-39,-40,-41,-42,-43,48,48,48,48,-50,-51,77,48,48,48,48,48,-31,-32,-33,-34,-35,-36,-37,-38,48,48,48,48,48,-44,-45,-46,-47,-48,-49,48,48,]),'ADDASSIGN':([12,20,84,],[25,-18,25,]),'SUBASSIGN':([12,20,84,],[26,-18,26,]),'MULASSIGN':([12,20,84,],[27,-18,27,]),'DIVASSIGN':([12,20,84,],[28,-18,28,]),'=':([12,20,32,84,],[29,-18,62,29,]),'(':([13,14,16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,44,45,46,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[30,31,35,35,35,35,-39,-40,-41,-42,-43,58,58,35,35,-50,-51,78,79,80,35,58,35,35,35,-31,-32,-33,-34,-35,-36,-37,-38,35,35,35,35,35,-44,-45,-46,-47,-48,-49,35,35,]),'+':([16,17,20,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,56,58,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,88,89,90,91,92,93,94,96,98,99,101,102,103,104,105,108,110,111,112,113,114,115,117,],[38,38,-18,38,38,-39,-40,-41,-42,-43,38,38,66,38,38,-55,-50,-51,-19,-20,-21,-22,-26,38,-16,-17,-15,66,38,66,38,38,38,-31,-32,-33,-34,-35,-36,-37,-38,66,-54,-28,38,38,38,38,66,38,-44,-45,-46,-47,-48,-49,66,-52,-53,66,66,66,-14,38,66,38,-27,-23,-24,-25,66,66,]),'-':([16,17,20,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,56,58,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,88,89,90,91,92,93,94,96,98,99,101,102,103,104,105,108,110,111,112,113,114,115,117,],[39,39,-18,39,39,-39,-40,-41,-42,-43,39,39,67,39,39,-55,-50,-51,-19,-20,-21,-22,-26,39,-16,-17,-15,67,39,67,39,39,39,-31,-32,-33,-34,-35,-36,-37,-38,67,-54,-28,39,39,39,39,67,39,-44,-45,-46,-47,-48,-49,67,-52,-53,67,67,67,-14,39,67,39,-27,-23,-24,-25,67,67,]),'EYE':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[44,44,44,44,-39,-40,-41,-42,-43,44,44,44,44,-50,-51,44,44,44,44,44,-31,-32,-33,-34,-35,-36,-37,-38,44,44,44,44,44,-44,-45,-46,-47,-48,-49,44,44,]),'ZEROS':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[45,45,45,45,-39,-40,-41,-42,-43,45,45,45,45,-50,-51,45,45,45,45,45,-31,-32,-33,-34,-35,-36,-37,-38,45,45,45,45,45,-44,-45,-46,-47,-48,-49,45,45,]),'ONES':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[46,46,46,46,-39,-40,-41,-42,-43,46,46,46,46,-50,-51,46,46,46,46,46,-31,-32,-33,-34,-35,-36,-37,-38,46,46,46,46,46,-44,-45,-46,-47,-48,-49,46,46,]),'INTNUM':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[49,49,49,49,-39,-40,-41,-42,-43,49,49,49,49,-50,-51,49,49,49,49,49,-31,-32,-33,-34,-35,-36,-37,-38,49,49,49,49,49,-44,-45,-46,-47,-48,-49,49,49,]),'FLOATNUM':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[50,50,50,50,-39,-40,-41,-42,-43,50,50,50,50,-50,-51,50,50,50,50,50,-31,-32,-33,-34,-35,-36,-37,-38,50,50,50,50,50,-44,-45,-46,-47,-48,-49,50,50,]),'STRING':([16,17,23,24,25,26,27,28,29,30,31,35,36,38,39,48,58,62,64,65,66,67,68,69,70,71,72,73,77,78,79,80,88,89,90,91,92,93,94,105,110,],[51,51,51,51,-39,-40,-41,-42,-43,51,51,51,51,-50,-51,51,51,51,51,51,-31,-32,-33,-34,-35,-36,-37,-38,51,51,51,51,51,-44,-45,-46,-47,-48,-49,51,51,]),';':([18,19,20,33,34,37,40,41,42,43,47,49,50,51,52,56,75,76,97,98,99,104,111,112,113,114,115,],[53,54,-18,63,-29,-55,-19,-20,-21,-22,-26,-16,-17,-15,82,83,-54,-28,-30,-52,-53,-14,-27,-23,-24,-25,118,]),"'":([20,37,40,41,42,43,47,49,50,51,76,104,111,112,113,114,],[-18,76,-19,-20,-21,-22,-26,-16,-17,-15,-28,-14,-27,-23,-24,-25,]),',':([20,34,37,40,41,42,43,47,49,50,51,75,76,98,99,104,111,112,113,114,],[-18,64,-55,-19,-20,-21,-22,-26,-16,-17,-15,-54,-28,-52,-53,-14,-27,-23,-24,-25,]),'*':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,68,-55,-19,-20,-21,-22,-26,-16,-17,-15,68,68,68,-54,-28,68,68,-52,-53,68,68,68,-14,68,-27,-23,-24,-25,68,68,]),'/':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,69,-55,-19,-20,-21,-22,-26,-16,-17,-15,69,69,69,-54,-28,69,69,-52,-53,69,69,69,-14,69,-27,-23,-24,-25,69,69,]),'DOTADD':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,70,-55,-19,-20,-21,-22,-26,-16,-17,-15,70,70,70,-54,-28,70,70,-52,-53,70,70,70,-14,70,-27,-23,-24,-25,70,70,]),'DOTSUB':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,71,-55,-19,-20,-21,-22,-26,-16,-17,-15,71,71,71,-54,-28,71,71,-52,-53,71,71,71,-14,71,-27,-23,-24,-25,71,71,]),'DOTMUL':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,72,-55,-19,-20,-21,-22,-26,-16,-17,-15,72,72,72,-54,-28,72,72,-52,-53,72,72,72,-14,72,-27,-23,-24,-25,72,72,]),'DOTDIV':([20,34,37,40,41,42,43,47,49,50,51,56,60,74,75,76,86,96,98,99,101,102,103,104,108,111,112,113,114,115,117,],[-18,73,-55,-19,-20,-21,-22,-26,-16,-17,-15,73,73,73,-54,-28,73,73,-52,-53,73,73,73,-14,73,-27,-23,-24,-25,73,73,]),']':([20,34,37,40,41,42,43,47,49,50,51,57,75,76,81,97,98,99,100,104,111,112,113,114,],[-18,-29,-55,-19,-20,-21,-22,-26,-16,-17,-15,84,-54,-28,104,-30,-52,-53,111,-14,-27,-23,-24,-25,]),'GT':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,89,-54,-28,89,-52,-53,-14,-27,-23,-24,-25,]),'LT':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,90,-54,-28,90,-52,-53,-14,-27,-23,-24,-25,]),'LE':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,91,-54,-28,91,-52,-53,-14,-27,-23,-24,-25,]),'GE':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,92,-54,-28,92,-52,-53,-14,-27,-23,-24,-25,]),'NE':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,93,-54,-28,93,-52,-53,-14,-27,-23,-24,-25,]),'EQ':([20,37,40,41,42,43,47,49,50,51,60,75,76,86,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,94,-54,-28,94,-52,-53,-14,-27,-23,-24,-25,]),')':([20,37,40,41,42,43,47,49,50,51,59,61,74,75,76,85,86,98,99,101,102,103,104,106,108,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,87,95,99,-54,-28,106,99,-52,-53,112,113,114,-14,-57,-56,-27,-23,-24,-25,]),':':([20,37,40,41,42,43,47,49,50,51,75,76,96,98,99,104,111,112,113,114,],[-18,-55,-19,-20,-21,-22,-26,-16,-17,-15,-54,-28,110,-52,-53,-14,-27,-23,-24,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,3,],[1,22,]),'INSTRUCTION':([0,1,3,22,87,95,116,117,],[2,21,2,21,107,109,119,120,]),'ASSIGN_EXP':([0,1,3,22,87,95,116,117,],[4,4,4,4,4,4,4,4,]),'IF_INSTRUCTION':([0,1,3,22,87,95,116,117,],[5,5,5,5,5,5,5,5,]),'WHILE_INSTRUCTION':([0,1,3,22,87,95,116,117,],[6,6,6,6,6,6,6,6,]),'FOR_INSTRUCTION':([0,1,3,22,87,95,116,117,],[7,7,7,7,7,7,7,7,]),'PRINT_FUN':([0,1,3,22,87,95,116,117,],[8,8,8,8,8,8,8,8,]),'RETURN_FUN':([0,1,3,22,87,95,116,117,],[9,9,9,9,9,9,9,9,]),'BREAK_GR':([0,1,3,22,87,95,116,117,],[10,10,10,10,10,10,10,10,]),'CONTINUE_GR':([0,1,3,22,87,95,116,117,],[11,11,11,11,11,11,11,11,]),'ID_GR':([0,1,3,15,16,17,22,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,87,88,95,105,110,116,117,],[12,12,12,32,42,42,12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,12,42,12,42,42,12,12,]),'ASSIGN_OP':([12,84,],[23,105,]),'LIST_VALUE':([16,17,24,48,64,77,],[33,52,57,81,97,100,]),'ARITHMETIC_EXP':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[34,34,56,34,60,60,74,75,34,86,96,34,98,34,101,102,103,108,115,117,]),'ARITHMETIC_OP_UNARY':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'VALUE':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'INT_GR':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FLOAT_GR':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'STRING_GR':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'VECTOR':([16,17,23,24,30,31,35,36,48,58,62,64,65,77,78,79,80,88,105,110,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'RELATION_EXP':([30,31,58,],[59,61,85,]),'ARITHMETIC_OP':([34,56,60,74,75,86,96,98,101,102,103,108,115,117,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATION_OP':([60,86,],[88,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> START INSTRUCTION','START',2,'p_start','Mparser.py',34),
  ('START -> INSTRUCTION','START',1,'p_start','Mparser.py',35),
  ('INSTRUCTION -> { START }','INSTRUCTION',3,'p_instruction','Mparser.py',44),
  ('INSTRUCTION -> ASSIGN_EXP','INSTRUCTION',1,'p_instruction','Mparser.py',45),
  ('INSTRUCTION -> IF_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',46),
  ('INSTRUCTION -> WHILE_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',47),
  ('INSTRUCTION -> FOR_INSTRUCTION','INSTRUCTION',1,'p_instruction','Mparser.py',48),
  ('INSTRUCTION -> PRINT_FUN','INSTRUCTION',1,'p_instruction','Mparser.py',49),
  ('INSTRUCTION -> RETURN_FUN','INSTRUCTION',1,'p_instruction','Mparser.py',50),
  ('INSTRUCTION -> BREAK_GR','INSTRUCTION',1,'p_instruction','Mparser.py',51),
  ('INSTRUCTION -> CONTINUE_GR','INSTRUCTION',1,'p_instruction','Mparser.py',52),
  ('BREAK_GR -> BREAK ;','BREAK_GR',2,'p_break','Mparser.py',59),
  ('CONTINUE_GR -> CONTINUE ;','CONTINUE_GR',2,'p_continue','Mparser.py',63),
  ('VECTOR -> [ LIST_VALUE ]','VECTOR',3,'p_basic_vector','Mparser.py',67),
  ('STRING_GR -> STRING','STRING_GR',1,'p_basic_string','Mparser.py',71),
  ('INT_GR -> INTNUM','INT_GR',1,'p_basic_int','Mparser.py',74),
  ('FLOAT_GR -> FLOATNUM','FLOAT_GR',1,'p_basic_float','Mparser.py',77),
  ('ID_GR -> ID','ID_GR',1,'p_basic_id','Mparser.py',80),
  ('VALUE -> INT_GR','VALUE',1,'p_basic_value','Mparser.py',84),
  ('VALUE -> FLOAT_GR','VALUE',1,'p_basic_value','Mparser.py',85),
  ('VALUE -> ID_GR','VALUE',1,'p_basic_value','Mparser.py',86),
  ('VALUE -> STRING_GR','VALUE',1,'p_basic_value','Mparser.py',87),
  ('VALUE -> EYE ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',88),
  ('VALUE -> ZEROS ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',89),
  ('VALUE -> ONES ( ARITHMETIC_EXP )','VALUE',4,'p_basic_value','Mparser.py',90),
  ('VALUE -> VECTOR','VALUE',1,'p_basic_value','Mparser.py',91),
  ('VALUE -> ID_GR [ LIST_VALUE ]','VALUE',4,'p_basic_value','Mparser.py',92),
  ("VALUE -> VALUE '",'VALUE',2,'p_basic_value','Mparser.py',93),
  ('LIST_VALUE -> ARITHMETIC_EXP','LIST_VALUE',1,'p_basic_list_values','Mparser.py',109),
  ('LIST_VALUE -> ARITHMETIC_EXP , LIST_VALUE','LIST_VALUE',3,'p_basic_list_values','Mparser.py',110),
  ('ARITHMETIC_OP -> +','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',119),
  ('ARITHMETIC_OP -> -','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',120),
  ('ARITHMETIC_OP -> *','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',121),
  ('ARITHMETIC_OP -> /','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',122),
  ('ARITHMETIC_OP -> DOTADD','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',123),
  ('ARITHMETIC_OP -> DOTSUB','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',124),
  ('ARITHMETIC_OP -> DOTMUL','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',125),
  ('ARITHMETIC_OP -> DOTDIV','ARITHMETIC_OP',1,'p_basic_arithmetic_op','Mparser.py',126),
  ('ASSIGN_OP -> ADDASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',130),
  ('ASSIGN_OP -> SUBASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',131),
  ('ASSIGN_OP -> MULASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',132),
  ('ASSIGN_OP -> DIVASSIGN','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',133),
  ('ASSIGN_OP -> =','ASSIGN_OP',1,'p_basic_assign_op','Mparser.py',134),
  ('RELATION_OP -> GT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',138),
  ('RELATION_OP -> LT','RELATION_OP',1,'p_basic_relation_op','Mparser.py',139),
  ('RELATION_OP -> LE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',140),
  ('RELATION_OP -> GE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',141),
  ('RELATION_OP -> NE','RELATION_OP',1,'p_basic_relation_op','Mparser.py',142),
  ('RELATION_OP -> EQ','RELATION_OP',1,'p_basic_relation_op','Mparser.py',143),
  ('ARITHMETIC_OP_UNARY -> +','ARITHMETIC_OP_UNARY',1,'p_basic_arithmetic_op_unar','Mparser.py',147),
  ('ARITHMETIC_OP_UNARY -> -','ARITHMETIC_OP_UNARY',1,'p_basic_arithmetic_op_unar','Mparser.py',148),
  ('ARITHMETIC_EXP -> ARITHMETIC_EXP ARITHMETIC_OP ARITHMETIC_EXP','ARITHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',152),
  ('ARITHMETIC_EXP -> ( ARITHMETIC_EXP )','ARITHMETIC_EXP',3,'p_exp_arithmetic','Mparser.py',153),
  ('ARITHMETIC_EXP -> ARITHMETIC_OP_UNARY ARITHMETIC_EXP','ARITHMETIC_EXP',2,'p_exp_arithmetic','Mparser.py',154),
  ('ARITHMETIC_EXP -> VALUE','ARITHMETIC_EXP',1,'p_exp_arithmetic','Mparser.py',155),
  ('RELATION_EXP -> ARITHMETIC_EXP RELATION_OP ARITHMETIC_EXP','RELATION_EXP',3,'p_exp_relation','Mparser.py',166),
  ('RELATION_EXP -> ( RELATION_EXP )','RELATION_EXP',3,'p_exp_relation','Mparser.py',167),
  ('ASSIGN_EXP -> ID_GR ASSIGN_OP ARITHMETIC_EXP ;','ASSIGN_EXP',4,'p_exp_assign','Mparser.py',174),
  ('ASSIGN_EXP -> ID_GR [ LIST_VALUE ] ASSIGN_OP ARITHMETIC_EXP ;','ASSIGN_EXP',7,'p_exp_assign','Mparser.py',175),
  ('IF_INSTRUCTION -> IF ( RELATION_EXP ) INSTRUCTION','IF_INSTRUCTION',5,'p_instruction_if','Mparser.py',182),
  ('IF_INSTRUCTION -> IF ( RELATION_EXP ) INSTRUCTION ELSE INSTRUCTION','IF_INSTRUCTION',7,'p_instruction_if','Mparser.py',183),
  ('WHILE_INSTRUCTION -> WHILE ( RELATION_EXP ) INSTRUCTION','WHILE_INSTRUCTION',5,'p_instruction_while','Mparser.py',190),
  ('FOR_INSTRUCTION -> FOR ID_GR = ARITHMETIC_EXP : ARITHMETIC_EXP INSTRUCTION','FOR_INSTRUCTION',7,'p_instruction_for','Mparser.py',194),
  ('PRINT_FUN -> PRINT LIST_VALUE ;','PRINT_FUN',3,'p_fun_print','Mparser.py',198),
  ('RETURN_FUN -> RETURN LIST_VALUE ;','RETURN_FUN',3,'p_fun_return','Mparser.py',201),
]
